#include <stdio.h>

// Function to perform insertion sort
void insertionSort(int arr[], int size) {
    for (int i = 1; i < size; i++) {
        int key = arr[i];
        int j = i - 1;
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}

// Function to perform binary search
int binarySearch(int arr[], int size, int key) {
    int low = 0, high = size - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == key) {
            return mid;
        } else if (arr[mid] < key) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    return -1; // If key is not found
}

int main() {
    // Define the array
    int arr[] = {23, 45, 58, 89, 78, 56, 12};
    // Calculate the size of the array
    int size = sizeof(arr) / sizeof(arr[0]);

    // Perform insertion sort
    insertionSort(arr, size);

    // Print the sorted array
    printf("Sorted array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    
    // Define the key to search for
    int key = 56;
    // Perform binary search
    int index = binarySearch(arr, size, key);
    // Print the result of the binary search
    if (index != -1) {
        printf("\nElement %d found at index %d\n", key, index);
    } else {
        printf("\nElement %d not found in the array\n", key);
    }

    return 0;
}
